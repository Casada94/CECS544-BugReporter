select max(BUG_REPORT_ID) from BUG_REPORTS;

--drop table BUG_REPORTS;
--delete from BUG_REPORTS;
CREATE TABLE BUG_REPORTS (
                           BUG_REPORT_ID INT AUTO_INCREMENT PRIMARY KEY,
                           PROGRAM_ID int NOT NULL,
                           REPORT_TYPE varchar(100) NOT NULL,
                           SEVERITY varchar(10) NOT NULL,
                           ATTACHMENTS boolean NOT NULL,
                           ATTACHMENT_DESC varchar(200) default NULL,
                           PROBLEM_SUMMARY varchar(256) NOT NULL,
                           REPRODUCIBLE boolean NOT NULL,
                           PROBLEM_DESCRIPTION text NOT NULL,
                           SUGGESTED_FIX text default NULL,
                           REPORTED_BY VARCHAR(50) NOT NULL,
                           REPORTED_DATE date NOT NULL,
                           FUNCTIONAL_AREA text ,
                           ASSIGNED_TO VARCHAR(50) default NULL,
                           COMMENTS text,
                           STATUS varchar(10) NOT NULL default 'OPEN',
                           PRIORITY tinyint not NULL default 3,
                           RESOLUTION VARCHAR(25) default NULL,
                           RESOLUTION_VERSION int default NULL,
                           RESOLVED_BY VARCHAR(50) default NULL,
                           RESOLVED_DATE date default NULL,
                           TESTED_BY  VARCHAR(50) default NULL,
                           TESTED_DATE date default NULL,
                           TREAT_AS_DEFERRED boolean NOT NULL default FALSE,
                           FOREIGN KEY (PROGRAM_ID) REFERENCES PROGRAMS(ID) ,
                           FOREIGN KEY (REPORT_TYPE) REFERENCES REPORT_TYPE(TYPE) ,
                           FOREIGN KEY (REPORTED_BY) REFERENCES ACCOUNTS(USERNAME) ,
                           FOREIGN KEY (ASSIGNED_TO) REFERENCES ACCOUNTS(USERNAME) ,
                           FOREIGN KEY (RESOLUTION) REFERENCES RESOLUTION(TYPE) ,
                           FOREIGN KEY (RESOLUTION_VERSION) REFERENCES PROGRAMS(ID) ,
                           FOREIGN KEY (RESOLVED_BY) REFERENCES ACCOUNTS(USERNAME),
                           FOREIGN KEY (TESTED_BY) REFERENCES ACCOUNTS(USERNAME)
);
select * from BUG_REPORTS

--drop table PROGRAMS;
--delete from PROGRAMS;
create table PROGRAMS(
ID INT AUTO_INCREMENT ,
NAME VARCHAR(100) NOT NULL,
`RELEASE` VARCHAR(100) NOT NULL,
VERSION VARCHAR(100) NOT NULL,
CONSTRAINT PRIMARY KEY (NAME,`RELEASE`,VERSION),
                     index(ID)
);
INSERT INTO PROGRAMS(NAME, VERSION,`RELEASE`) VALUES('BUGGY PROGRAM 1','1.0','1.0');
INSERT INTO PROGRAMS(NAME, VERSION,`RELEASE`) VALUES('BUGGY PROGRAM 1','2.0','1.0');
INSERT INTO PROGRAMS(NAME, VERSION,`RELEASE`) VALUES('BUGGY PROGRAM 1','2.5','1.0');
INSERT INTO PROGRAMS(NAME, VERSION,`RELEASE`) VALUES('BUGGY PROGRAM 1','1.0','2.0');
INSERT INTO PROGRAMS(NAME, VERSION,`RELEASE`) VALUES('BUGGY PROGRAM 1','1.5','1.0');
INSERT INTO PROGRAMS(NAME, VERSION,`RELEASE`) VALUES('BUGGY PROGRAM 1','1.6','1.0');
INSERT INTO PROGRAMS(NAME, VERSION,`RELEASE`) VALUES('BUGGY PROGRAM 1','0.1','3.0');
INSERT INTO PROGRAMS(NAME, VERSION,`RELEASE`) VALUES('BUGGY PROGRAM 1','0.2','3.0');
INSERT INTO PROGRAMS(NAME, VERSION,`RELEASE`) VALUES('BUGGY PROGRAM 2','1.0','1.0');
INSERT INTO PROGRAMS(NAME, VERSION,`RELEASE`) VALUES('BUGGY PROGRAM 2','2.0','1.0');
INSERT INTO PROGRAMS(NAME, VERSION,`RELEASE`) VALUES('BUGGY PROGRAM 2','2.5','1.0');
INSERT INTO PROGRAMS(NAME, VERSION,`RELEASE`) VALUES('BUGGY PROGRAM 2','1.0','2.0');
INSERT INTO PROGRAMS(NAME, VERSION,`RELEASE`) VALUES('BUGGY PROGRAM 2','1.5','1.0');
INSERT INTO PROGRAMS(NAME, VERSION,`RELEASE`) VALUES('BUGGY PROGRAM 2','1.6','1.0');
INSERT INTO PROGRAMS(NAME, VERSION,`RELEASE`) VALUES('BUGGY PROGRAM 2','0.1','3.0');
INSERT INTO PROGRAMS(NAME, VERSION,`RELEASE`) VALUES('BUGGY PROGRAM 2','0.2','3.0');

SELECT * FROM PROGRAMS GROUP BY NAME, `RELEASE`, VERSION;


create table REPORT_TYPE(
TYPE VARCHAR(15) PRIMARY KEY
);
INSERT INTO REPORT_TYPE VALUES('Coding Error');
INSERT INTO REPORT_TYPE VALUES('Design Error');
INSERT INTO REPORT_TYPE VALUES('Suggestion');
INSERT INTO REPORT_TYPE VALUES('Documentation');
INSERT INTO REPORT_TYPE VALUES('Hardware');
INSERT INTO REPORT_TYPE VALUES('Query');

create table RESOLUTION(
TYPE VARCHAR(25) PRIMARY KEY
);
INSERT INTO RESOLUTION VALUES('Pending');
INSERT INTO RESOLUTION VALUES('Fixed');
INSERT INTO RESOLUTION VALUES('Irreproducible');
INSERT INTO RESOLUTION VALUES('Deferred');
INSERT INTO RESOLUTION VALUES('As Designed');
INSERT INTO RESOLUTION VALUES('Cannot be Fixed');
INSERT INTO RESOLUTION VALUES('Withdrawn by Reporter');
INSERT INTO RESOLUTION VALUES('Need More Info');
INSERT INTO RESOLUTION VALUES('Disagree With Suggestion');


--drop table ACCOUNTS;
--delete from ACCOUNTS;
create table ACCOUNTS(
    USERNAME VARCHAR(50) PRIMARY KEY,
    PASSWORD VARCHAR(500) NOT NULL,
    FIRST_NAME VARCHAR(50) NOT NULL,
    LAST_NAME VARCHAR(50) NOT NULL,
    ENABLED BOOLEAN NOT NULL,
    AUTHORITY VARCHAR(50) NOT NULL,
    PASSWORD_CHANGE_REQUIRED BOOLEAN NOT NULL default TRUE
);


INSERT INTO ACCOUNTS VALUES('admin','{bcrypt}$2a$10$2rFaJ/rXAjf7jIb4HTyd/uS7PzWo8A64X0EFS2.oFlM1ff6mBA5Sq','Admin','Guy',TRUE,'ADMIN',TRUE);
INSERT INTO ACCOUNTS VALUES('manager','{bcrypt}$2a$10$2rFaJ/rXAjf7jIb4HTyd/uS7PzWo8A64X0EFS2.oFlM1ff6mBA5Sq','Manager','Lady',TRUE,'MANAGER');
INSERT INTO ACCOUNTS VALUES('employee','{bcrypt}$2a$10$2rFaJ/rXAjf7jIb4HTyd/uS7PzWo8A64X0EFS2.oFlM1ff6mBA5Sq','Employee','Edward',TRUE,'EMPLOYEE');
INSERT INTO ACCOUNTS VALUES('user','{bcrypt}$2a$10$CPF9pAoGeb/5bwz65GdZmuqPLiqtxBTkfEKhmynGD6Zz0vAAShPsq','Usama','Bin User',TRUE,'USER');
SELECT USERNAME,PASSWORD,ENABLED FROM ACCOUNTS WHERE USERNAME='admin';

--delete from FUNCTIONAL_AREA;
create table FUNCTIONAL_AREA(
AREA VARCHAR(50) PRIMARY KEY
);

--delete from FUNCTIONAL_AREA_MAPPING;
create table FUNCTIONAL_AREA_MAPPING(
    PROGRAM_ID INT,
    FUNCTIONAL_AREA VARCHAR(50),
    PRIMARY KEY (PROGRAM_ID,FUNCTIONAL_AREA),
    FOREIGN KEY (PROGRAM_ID) REFERENCES PROGRAMS(ID),
    FOREIGN KEY (FUNCTIONAL_AREA) REFERENCES FUNCTIONAL_AREA(AREA)
);

SELECT NAME,`RELEASE`,VERSION,AREA FROM PROGRAMS
INNER JOIN FUNCTIONAL_AREA_MAPPING
ON PROGRAMS.ID=FUNCTIONAL_AREA_MAPPING.PROGRAM_ID
INNER JOIN FUNCTIONAL_AREA
ON FUNCTIONAL_AREA_MAPPING.FUNCTIONAL_AREA=FUNCTIONAL_AREA.AREA
ORDER BY PROGRAMS.NAME,PROGRAMS.`RELEASE`,PROGRAMS.VERSION,FUNCTIONAL_AREA.AREA

select * from FUNCTIONAL_AREA

delete from BUG_REPORTS
insert into BUG_REPORTS(PROGRAM_ID, REPORT_TYPE, SEVERITY, ATTACHMENTS, ATTACHMENT_DESC, PROBLEM_SUMMARY, REPRODUCIBLE, PROBLEM_DESCRIPTION, REPORTED_BY, REPORTED_DATE)
VALUES(1,'Coding Error','Serious',TRUE,'Some attachments','Some problem summary',TRUE,'Some problem description','admin',NOW());
select * from BUG_REPORTS;

select BUG_REPORT_ID, PROGRAMS.NAME as NAME, PROGRAMS.`RELEASE` as `RELEASE`, PROGRAMS.version as VERSION,REPORT_TYPE,SEVERITY,ATTACHMENTS, ATTACHMENT_DESC,PROBLEM_SUMMARY,REPRODUCIBLE,PROBLEM_DESCRIPTION,SUGGESTED_FIX, REPORTED_BY,REPORTED_DATE, FUNCTIONAL_AREA,ASSIGNED_TO,COMMENTS,STATUS,PRIORITY,RESOLUTION,RESOLUTION_VERSION,RESOLVED_BY,RESOLVED_DATE,TESTED_BY,TESTED_DATE, TREAT_AS_DEFERRED
from BUG_REPORTS
         inner join PROGRAMS
                    on BUG_REPORTS.PROGRAM_ID=PROGRAMS.ID
         inner join ACCOUNTS
                    on BUG_REPORTS.REPORTED_BY=ACCOUNTS.USERNAME
WHERE ACCOUNTS.USERNAME='admin'
ORDER BY BUG_REPORTS.REPORTED_BY DESC;

select BUG_REPORT_ID, PROGRAMS.NAME as NAME, PROGRAMS.`RELEASE` as `RELEASE`, PROGRAMS.version as VERSION,REPORT_TYPE,SEVERITY,ATTACHMENTS, ATTACHMENT_DESC,PROBLEM_SUMMARY,REPRODUCIBLE,PROBLEM_DESCRIPTION,SUGGESTED_FIX, REPORTED_BY,REPORTED_DATE, FUNCTIONAL_AREA,ASSIGNED_TO,COMMENTS,STATUS,PRIORITY,RESOLUTION,RESOLUTION_VERSION,RESOLVED_BY,RESOLVED_DATE,TESTED_BY,TESTED_DATE, TREAT_AS_DEFERRED
from BUG_REPORTS
         inner join PROGRAMS
                    on BUG_REPORTS.PROGRAM_ID=PROGRAMS.ID
         inner join ACCOUNTS
                    on BUG_REPORTS.REPORTED_BY=ACCOUNTS.USERNAME
WHERE STATUS='OPEN'
ORDER BY BUG_REPORTS.REPORTED_BY DESC;

INSERT INTO BUG_REPORTS(PROGRAM_ID,REPORT_TYPE,SEVERITY,ATTACHMENTS,ATTACHMENT_DESC,PROBLEM_SUMMARY,REPRODUCIBLE,PROBLEM_DESCRIPTION,SUGGESTED_FIX,REPORTED_BY,REPORTED_DATE,FUNCTIONAL_AREA,ASSIGNED_TO,COMMENTS,STATUS,PRIORITY,RESOLUTION,RESOLUTION_VERSION,RESOLVED_BY,RESOLVED_DATE,TESTED_BY,TESTED_DATE,TREAT_AS_DEFERRED)
VALUES (:programId,:reportType,:severity,:attachments,:attachmentDesc,:problemSummary,:reproducible,:problemDescription,:suggestedFix,:reportedBy,:reportedDate,:functionalArea,:assignedTo,:comments,:status,:priority,:resolution,:resolutionVersion,:resolvedBy,:resolvedDate,:testedBy,:testedDate,:treatAsDeferred);

UPDATE BUG_REPORTS SET REPORT_TYPE=:reportType,SEVERITY=:severity,ATTACHMENTS=:attachments,ATTACHMENT_DESC=:attachmentDesc,PROBLEM_SUMMARY=:problemSummary,REPRODUCIBLE=:reproducible,PROBLEM_DESCRIPTION=:problemDescription,SUGGESTED_FIX=:suggestedFix,FUNCTIONAL_AREA=:functionalArea,ASSIGNED_TO=:assignedTo,COMMENTS=:comments,STATUS=:status,PRIORITY=:priority,RESOLUTION=:resolution,RESOLUTION_VERSION=:resolutionVersion,RESOLVED_BY=:resolvedBy,RESOLVED_DATE=:resolvedDate,TESTED_BY=:testedBy,TESTED_DATE=:testedDate,TREAT_AS_DEFERRED=:treatAsDeferred
WHERE BUG_REPORT_ID=:bugReportId;


delete from BUG_REPORTS;
select * from BUG_REPORTS;


select BUG_REPORT_ID, PROGRAMS.NAME as NAME, PROGRAMS.`RELEASE` as `RELEASE`, PROGRAMS.version as VERSION,REPORT_TYPE,SEVERITY,ATTACHMENTS, ATTACHMENT_DESC,PROBLEM_SUMMARY,REPRODUCIBLE,PROBLEM_DESCRIPTION,SUGGESTED_FIX, REPORTED_BY,REPORTED_DATE, FUNCTIONAL_AREA,ASSIGNED_TO,COMMENTS,STATUS,PRIORITY,RESOLUTION,RESOLUTION_VERSION,RESOLVED_BY,RESOLVED_DATE,TESTED_BY,TESTED_DATE, TREAT_AS_DEFERRED
from BUG_REPORTS
         inner join PROGRAMS
                    on BUG_REPORTS.PROGRAM_ID=PROGRAMS.ID
         inner join ACCOUNTS
                    on BUG_REPORTS.REPORTED_BY=ACCOUNTS.USERNAME
WHERE ACCOUNTS.USERNAME=:reportedBy
ORDER BY BUG_REPORTS.REPORTED_BY DESC